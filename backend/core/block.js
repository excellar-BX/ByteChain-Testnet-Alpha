const hashFunc = require('../util/util');

// Block class
class Block {
    constructor (blockHeight, transactions, prevBlockHash) {
        this.nonce = 0;
        this.blockHeight = blockHeight;
        this.timestamp = Date.now();
        this.transactions = transactions;
        this.merkleroot = hashFunc(`${JSON.stringify(this.transactions)}${this.nonce}`);
        this.prevBlockHash = prevBlockHash;
        this.blockHash = '';
    }

    //Method to hash a block
    HashBlock() {
        let dataAsString = `${this.blockHeight}${this.nonce}${JSON.stringify(this.transactions)}${this.merkleroot}${this.prevBlockHash}`;
        this.blockHash = hashFunc(dataAsString);
        return this.blockHash;
    }

   // Validating if the hash generated by HashBlock() using Proof of Work(PoW);
    ProofOfWork() {
        this.HashBlock();
        while(this.HashBlock().substring(0, ) !== '00') {
            this.nonce ++;
            this.blockHash = this.HashBlock();
        };
        return this.nonce;
    }
}


module.exports = Block;